

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 08 10:26:10 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361                           
   362                           	psect	idataCOMMON
   363  035F                     __pidataCOMMON:
   364                           
   365                           ;initializer for _stayIn
   366  035F  3401               	retlw	1
   367  0360  3400               	retlw	0
   368                           
   369                           	psect	idataBANK0
   370  0361                     __pidataBANK0:
   371                           
   372                           ;initializer for _wantedTemp
   373  0361  343C               	retlw	60
   374  0362  3400               	retlw	0
   375  0009                     _PORTEbits	set	9
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  001F                     _ADCON0	set	31
   379  0008                     _PORTD	set	8
   380  005F                     _GIE	set	95
   381  005C                     _INTE	set	92
   382  0059                     _INTF	set	89
   383  003D                     _RC5	set	61
   384  002C                     _RA4	set	44
   385  002D                     _RA5	set	45
   386  0035                     _RB5	set	53
   387  0037                     _RB7	set	55
   388  009E                     _ADRESL	set	158
   389  009F                     _ADCON1	set	159
   390  0088                     _TRISD	set	136
   391  0085                     _TRISA	set	133
   392  040E                     _INTEDG	set	1038
   393  0435                     _TRISB5	set	1077
   394  0437                     _TRISB7	set	1079
   395  043D                     _TRISC5	set	1085
   396                           
   397                           	psect	cinit
   398  000F                     start_initialization:	
   399                           ; #config settings
   400                           
   401  000F                     __initialization:
   402                           
   403                           ; Initialize objects allocated to BANK0
   404  000F  120A  118A  2361  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   405  0014  00C4               	movwf	__pdataBANK0& (0+127)
   406  0015  120A  118A  2362  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   407  001A  00C5               	movwf	(__pdataBANK0+1)& (0+127)
   408                           
   409                           ; Initialize objects allocated to COMMON
   410  001B  120A  118A  235F  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   411  0020  00FA               	movwf	__pdataCOMMON& (0+127)
   412  0021  120A  118A  2360  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   413  0026  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   414                           
   415                           ; Clear objects allocated to BANK0
   416  0027  01B8               	clrf	__pbssBANK0& (0+127)
   417  0028  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   418  0029  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   419  002A  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   420  002B  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   421  002C  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   422  002D  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   423  002E  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   424  002F  01C0               	clrf	(__pbssBANK0+8)& (0+127)
   425  0030  01C1               	clrf	(__pbssBANK0+9)& (0+127)
   426  0031  01C2               	clrf	(__pbssBANK0+10)& (0+127)
   427  0032  01C3               	clrf	(__pbssBANK0+11)& (0+127)
   428  0033                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431  0033                     __end_of__initialization:
   432  0033  0183               	clrf	3
   433  0034  120A  118A  28E5   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	dataCOMMON
   436  007A                     __pdataCOMMON:
   437  007A                     _stayIn:
   438  007A                     	ds	2
   439                           
   440                           	psect	bssBANK0
   441  0038                     __pbssBANK0:
   442  0038                     _tmp:
   443  0038                     	ds	2
   444  003A                     _flag:
   445  003A                     	ds	2
   446  003C                     _tempinit:
   447  003C                     	ds	2
   448  003E                     _str:
   449  003E                     	ds	6
   450                           
   451                           	psect	dataBANK0
   452  0044                     __pdataBANK0:
   453  0044                     _wantedTemp:
   454  0044                     	ds	2
   455                           
   456                           	psect	cstackCOMMON
   457  0070                     __pcstackCOMMON:
   458  0070                     ?_IRQ_RB0_init:
   459  0070                     ?_adc_init:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_display7s:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_ISR:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ??_ISR:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 1 bytes @ 0x0
   476  0070                     	ds	2
   477  0072                     ??_IRQ_RB0_init:
   478  0072                     ??_adc_init:	
   479                           ; 1 bytes @ 0x2
   480                           
   481  0072                     ??_display7s:	
   482                           ; 1 bytes @ 0x2
   483                           
   484  0072                     ?_adc_amostra:	
   485                           ; 1 bytes @ 0x2
   486                           
   487  0072                     ?___lwmod:	
   488                           ; 2 bytes @ 0x2
   489                           
   490  0072                     ___lwmod@divisor:	
   491                           ; 2 bytes @ 0x2
   492                           
   493                           
   494                           ; 2 bytes @ 0x2
   495  0072                     	ds	2
   496  0074                     adc_amostra@canal:
   497  0074                     display7s@v:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0074                     ___lwmod@dividend:	
   501                           ; 1 bytes @ 0x4
   502                           
   503                           
   504                           ; 2 bytes @ 0x4
   505  0074                     	ds	1
   506  0075                     ??___wmul:
   507  0075                     ___wmul@product:	
   508                           ; 1 bytes @ 0x5
   509                           
   510                           
   511                           ; 2 bytes @ 0x5
   512  0075                     	ds	1
   513  0076                     ??___lwmod:
   514  0076                     ___lwmod@counter:	
   515                           ; 1 bytes @ 0x6
   516                           
   517                           
   518                           ; 1 bytes @ 0x6
   519  0076                     	ds	1
   520  0077                     ??___lwdiv:
   521  0077                     ___lwdiv@counter:	
   522                           ; 1 bytes @ 0x7
   523                           
   524                           
   525                           ; 1 bytes @ 0x7
   526  0077                     	ds	1
   527  0078                     ___lwdiv@quotient:
   528                           
   529                           ; 2 bytes @ 0x8
   530  0078                     	ds	2
   531  007A                     ??_itoa:
   532                           
   533                           	psect	cstackBANK0
   534  0020                     __pcstackBANK0:	
   535                           ; 1 bytes @ 0xA
   536                           
   537  0020                     ??_adc_amostra:
   538  0020                     ?___lwdiv:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0020                     ___lwdiv@divisor:	
   542                           ; 2 bytes @ 0x0
   543                           
   544                           
   545                           ; 2 bytes @ 0x0
   546  0020                     	ds	2
   547  0022                     ___lwdiv@dividend:
   548                           
   549                           ; 2 bytes @ 0x2
   550  0022                     	ds	2
   551  0024                     ?_itoa:
   552  0024                     itoa@val:	
   553                           ; 1 bytes @ 0x4
   554                           
   555                           
   556                           ; 2 bytes @ 0x4
   557  0024                     	ds	2
   558  0026                     itoa@str:
   559                           
   560                           ; 1 bytes @ 0x6
   561  0026                     	ds	1
   562  0027                     ?___wmul:
   563  0027                     ___wmul@multiplier:	
   564                           ; 2 bytes @ 0x7
   565                           
   566                           
   567                           ; 2 bytes @ 0x7
   568  0027                     	ds	2
   569  0029                     ___wmul@multiplicand:
   570                           
   571                           ; 2 bytes @ 0x9
   572  0029                     	ds	2
   573  002B                     ?_init_temperature:
   574  002B                     init_temperature@tmp:	
   575                           ; 1 bytes @ 0xB
   576                           
   577                           
   578                           ; 2 bytes @ 0xB
   579  002B                     	ds	2
   580  002D                     init_temperature@str:
   581                           
   582                           ; 1 bytes @ 0xD
   583  002D                     	ds	1
   584  002E                     ??_init_temperature:
   585                           
   586                           ; 1 bytes @ 0xE
   587  002E                     	ds	2
   588  0030                     init_temperature@res:
   589                           
   590                           ; 2 bytes @ 0x10
   591  0030                     	ds	2
   592  0032                     init_temperature@y:
   593                           
   594                           ; 1 bytes @ 0x12
   595  0032                     	ds	1
   596  0033                     init_temperature@x:
   597                           
   598                           ; 1 bytes @ 0x13
   599  0033                     	ds	1
   600  0034                     ??_main:
   601                           
   602                           ; 1 bytes @ 0x14
   603  0034                     	ds	2
   604  0036                     main@y:
   605                           
   606                           ; 1 bytes @ 0x16
   607  0036                     	ds	1
   608  0037                     main@x:
   609                           
   610                           ; 1 bytes @ 0x17
   611  0037                     	ds	1
   612                           
   613                           	psect	maintext
   614  00E5                     __pmaintext:	
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 24 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  x               1   23[BANK0 ] unsigned char 
   625 ;;  y               1   22[BANK0 ] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : B00/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       2       0       0       0
   637 ;;      Temps:          0       2       0       0       0
   638 ;;      Totals:         0       4       0       0       0
   639 ;;Total ram usage:        4 bytes
   640 ;; Hardware stack levels required when called:    4
   641 ;; This function calls:
   642 ;;		_IRQ_RB0_init
   643 ;;		___wmul
   644 ;;		_adc_amostra
   645 ;;		_adc_init
   646 ;;		_display7s
   647 ;;		_init_temperature
   648 ;;		_itoa
   649 ;; This function is called by:
   650 ;;		Startup code after reset
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _main
   656  00E5                     _main:
   657  00E5                     l1529:	
   658                           ;incstack = 0
   659                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   660                           
   661                           
   662                           ;main.c: 27:     IRQ_RB0_init ();
   663  00E5  120A  118A  2359  120A  118A  	fcall	_IRQ_RB0_init
   664  00EA                     l1531:
   665                           
   666                           ;main.c: 30:     TRISA = 0x07;
   667  00EA  3007               	movlw	7
   668  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   669  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   670  00ED  0085               	movwf	5	;volatile
   671  00EE                     l1533:
   672                           
   673                           ;main.c: 32:     TRISD = 0x00;
   674  00EE  0188               	clrf	8	;volatile
   675  00EF                     l1535:
   676                           
   677                           ;main.c: 34:     PORTD = 0x00;
   678  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   679  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   680  00F1  0188               	clrf	8	;volatile
   681  00F2                     l1537:
   682                           
   683                           ;main.c: 36:     TRISC5 = 0;
   684  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   685  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   686  00F4  1287               	bcf	7,5	;volatile
   687  00F5                     l1539:
   688                           
   689                           ;main.c: 37:     TRISB7 = 0;
   690  00F5  1386               	bcf	6,7	;volatile
   691  00F6                     l1541:
   692                           
   693                           ;main.c: 38:     RB7 =0;
   694  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   695  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   696  00F8  1386               	bcf	6,7	;volatile
   697  00F9                     l1543:
   698                           
   699                           ;main.c: 39:     TRISB5 = 0;
   700  00F9  1683               	bsf	3,5	;RP0=1, select bank1
   701  00FA  1303               	bcf	3,6	;RP1=0, select bank1
   702  00FB  1286               	bcf	6,5	;volatile
   703  00FC                     l1545:
   704                           
   705                           ;main.c: 40:     RB5 =0;
   706  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   707  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   708  00FE  1286               	bcf	6,5	;volatile
   709                           
   710                           ;main.c: 41:     adc_init();
   711  00FF  120A  118A  2350  120A  118A  	fcall	_adc_init
   712                           
   713                           ;main.c: 43:     while(flag)
   714  0104  2980               	goto	l1575
   715  0105                     l1547:
   716                           
   717                           ;main.c: 44:     {;main.c: 45:         if (!tempinit)
   718  0105  083C               	movf	_tempinit,w
   719  0106  043D               	iorwf	_tempinit+1,w
   720  0107  1D03               	btfss	3,2
   721  0108  290A               	goto	u701
   722  0109  290B               	goto	u700
   723  010A                     u701:
   724  010A  2919               	goto	l1551
   725  010B                     u700:
   726  010B                     l1549:
   727                           
   728                           ;main.c: 46:         {;main.c: 47:             init_temperature (tmp, str);
   729  010B  0839               	movf	_tmp+1,w
   730  010C  00AC               	movwf	init_temperature@tmp+1
   731  010D  0838               	movf	_tmp,w
   732  010E  00AB               	movwf	init_temperature@tmp
   733  010F  303E               	movlw	(low (_str| 0))& (0+255)
   734  0110  00FF               	movwf	btemp+1
   735  0111  087F               	movf	btemp+1,w
   736  0112  00AD               	movwf	init_temperature@str
   737  0113  120A  118A  2037  120A  118A  	fcall	_init_temperature
   738                           
   739                           ;main.c: 48:         }else{
   740  0118  2980               	goto	l1575
   741  0119                     l1551:
   742                           
   743                           ;main.c: 49:             tmp=(adc_amostra(2)*10)/2;
   744  0119  3002               	movlw	2
   745  011A  120A  118A  2246  120A  118A  	fcall	_adc_amostra
   746  011F  0873               	movf	?_adc_amostra+1,w
   747  0120  1283               	bcf	3,5	;RP0=0, select bank0
   748  0121  1303               	bcf	3,6	;RP1=0, select bank0
   749  0122  00A8               	movwf	___wmul@multiplier+1
   750  0123  0872               	movf	?_adc_amostra,w
   751  0124  00A7               	movwf	___wmul@multiplier
   752  0125  300A               	movlw	10
   753  0126  00A9               	movwf	___wmul@multiplicand
   754  0127  3000               	movlw	0
   755  0128  00AA               	movwf	___wmul@multiplicand+1
   756  0129  120A  118A  230E  120A  118A  	fcall	___wmul
   757  012E  1283               	bcf	3,5	;RP0=0, select bank0
   758  012F  1303               	bcf	3,6	;RP1=0, select bank0
   759  0130  0827               	movf	?___wmul,w
   760  0131  00B4               	movwf	??_main
   761  0132  0828               	movf	?___wmul+1,w
   762  0133  00B5               	movwf	??_main+1
   763  0134  1003               	clrc
   764  0135  0CB5               	rrf	??_main+1,f
   765  0136  0CB4               	rrf	??_main,f
   766  0137  0834               	movf	??_main,w
   767  0138  00B8               	movwf	_tmp
   768  0139  0835               	movf	??_main+1,w
   769  013A  00B9               	movwf	_tmp+1
   770  013B                     l1553:
   771                           
   772                           ;main.c: 50:             itoa(tmp,str);
   773  013B  0839               	movf	_tmp+1,w
   774  013C  00A5               	movwf	itoa@val+1
   775  013D  0838               	movf	_tmp,w
   776  013E  00A4               	movwf	itoa@val
   777  013F  303E               	movlw	(low (_str| 0))& (0+255)
   778  0140  00FF               	movwf	btemp+1
   779  0141  087F               	movf	btemp+1,w
   780  0142  00A6               	movwf	itoa@str
   781  0143  120A  118A  21EA  120A  118A  	fcall	_itoa
   782  0148                     l1555:
   783                           
   784                           ;main.c: 51:             RA5 = 0;
   785  0148  1283               	bcf	3,5	;RP0=0, select bank0
   786  0149  1303               	bcf	3,6	;RP1=0, select bank0
   787  014A  1285               	bcf	5,5	;volatile
   788  014B                     l1557:
   789                           
   790                           ;main.c: 52:             RA4 = 1;
   791  014B  1605               	bsf	5,4	;volatile
   792  014C                     l1559:
   793                           
   794                           ;main.c: 53:             unsigned char y= str[2];
   795  014C  0840               	movf	_str+2,w
   796  014D  00FF               	movwf	btemp+1
   797  014E  087F               	movf	btemp+1,w
   798  014F  00B6               	movwf	main@y
   799  0150                     l1561:
   800                           
   801                           ;main.c: 54:             PORTD=display7s(y);
   802  0150  0836               	movf	main@y,w
   803  0151  120A  118A  218B  120A  118A  	fcall	_display7s
   804  0156  1283               	bcf	3,5	;RP0=0, select bank0
   805  0157  1303               	bcf	3,6	;RP1=0, select bank0
   806  0158  0088               	movwf	8	;volatile
   807  0159                     l1563:
   808                           
   809                           ;main.c: 55:             _delay((unsigned long)((30)*(8000000/4000.0)));
   810  0159  304E               	movlw	78
   811  015A  1283               	bcf	3,5	;RP0=0, select bank0
   812  015B  1303               	bcf	3,6	;RP1=0, select bank0
   813  015C  00B5               	movwf	??_main+1
   814  015D  30EA               	movlw	234
   815  015E  00B4               	movwf	??_main
   816  015F                     u727:
   817  015F  0BB4               	decfsz	??_main,f
   818  0160  295F               	goto	u727
   819  0161  0BB5               	decfsz	??_main+1,f
   820  0162  295F               	goto	u727
   821  0163  0000               	nop
   822  0164                     l1565:
   823                           
   824                           ;main.c: 56:             RA4 = 0;
   825  0164  1283               	bcf	3,5	;RP0=0, select bank0
   826  0165  1303               	bcf	3,6	;RP1=0, select bank0
   827  0166  1205               	bcf	5,4	;volatile
   828  0167                     l1567:
   829                           
   830                           ;main.c: 57:             RA5 = 1;
   831  0167  1685               	bsf	5,5	;volatile
   832  0168                     l1569:
   833                           
   834                           ;main.c: 58:             unsigned char x= str[3];
   835  0168  0841               	movf	_str+3,w
   836  0169  00FF               	movwf	btemp+1
   837  016A  087F               	movf	btemp+1,w
   838  016B  00B7               	movwf	main@x
   839  016C                     l1571:
   840                           
   841                           ;main.c: 59:             PORTD=display7s(x);
   842  016C  0837               	movf	main@x,w
   843  016D  120A  118A  218B  120A  118A  	fcall	_display7s
   844  0172  1283               	bcf	3,5	;RP0=0, select bank0
   845  0173  1303               	bcf	3,6	;RP1=0, select bank0
   846  0174  0088               	movwf	8	;volatile
   847  0175                     l1573:
   848                           
   849                           ;main.c: 60:             _delay((unsigned long)((30)*(8000000/4000.0)));
   850  0175  304E               	movlw	78
   851  0176  1283               	bcf	3,5	;RP0=0, select bank0
   852  0177  1303               	bcf	3,6	;RP1=0, select bank0
   853  0178  00B5               	movwf	??_main+1
   854  0179  30EA               	movlw	234
   855  017A  00B4               	movwf	??_main
   856  017B                     u737:
   857  017B  0BB4               	decfsz	??_main,f
   858  017C  297B               	goto	u737
   859  017D  0BB5               	decfsz	??_main+1,f
   860  017E  297B               	goto	u737
   861  017F  0000               	nop
   862  0180                     l1575:
   863                           
   864                           ;main.c: 43:     while(flag)
   865  0180  1283               	bcf	3,5	;RP0=0, select bank0
   866  0181  1303               	bcf	3,6	;RP1=0, select bank0
   867  0182  083A               	movf	_flag,w
   868  0183  043B               	iorwf	_flag+1,w
   869  0184  1D03               	btfss	3,2
   870  0185  2987               	goto	u711
   871  0186  2988               	goto	u710
   872  0187                     u711:
   873  0187  2905               	goto	l1547
   874  0188                     u710:
   875  0188                     l66:
   876  0188  120A  118A  280C   	ljmp	start
   877  018B                     __end_of_main:
   878                           
   879                           	psect	text1
   880  0037                     __ptext1:	
   881 ;; *************** function _init_temperature *****************
   882 ;; Defined at:
   883 ;;		line 66 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  tmp             2   11[BANK0 ] unsigned int 
   886 ;;  str             1   13[BANK0 ] PTR unsigned char 
   887 ;;		 -> str(6), 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  x               1   19[BANK0 ] unsigned char 
   890 ;;  y               1   18[BANK0 ] unsigned char 
   891 ;;  res             2   16[BANK0 ] int 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       3       0       0       0
   902 ;;      Locals:         0       4       0       0       0
   903 ;;      Temps:          0       2       0       0       0
   904 ;;      Totals:         0       9       0       0       0
   905 ;;Total ram usage:        9 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    3
   908 ;; This function calls:
   909 ;;		___wmul
   910 ;;		_adc_amostra
   911 ;;		_display7s
   912 ;;		_itoa
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _init_temperature
   920  0037                     _init_temperature:
   921  0037                     l1491:	
   922                           ;incstack = 0
   923                           ; Regs used in _init_temperature: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   924                           
   925                           
   926                           ;main.c: 66: void init_temperature (unsigned int tmp, unsigned char str[6]);main.c: 67: 
      +                          {;main.c: 68:     int res = 0;
   927  0037  1283               	bcf	3,5	;RP0=0, select bank0
   928  0038  1303               	bcf	3,6	;RP1=0, select bank0
   929  0039  01B0               	clrf	init_temperature@res
   930  003A  01B1               	clrf	init_temperature@res+1
   931                           
   932                           ;main.c: 69:     while (flag && res <= wantedTemp){
   933  003B  28CA               	goto	l1519
   934  003C                     l70:
   935                           
   936                           ;main.c: 70:         RC5 = 1;
   937  003C  1283               	bcf	3,5	;RP0=0, select bank0
   938  003D  1303               	bcf	3,6	;RP1=0, select bank0
   939  003E  1687               	bsf	7,5	;volatile
   940  003F                     l1493:
   941                           
   942                           ;main.c: 71:         tmp=(adc_amostra(2)*10)/2;
   943  003F  3002               	movlw	2
   944  0040  120A  118A  2246  120A  118A  	fcall	_adc_amostra
   945  0045  0873               	movf	?_adc_amostra+1,w
   946  0046  1283               	bcf	3,5	;RP0=0, select bank0
   947  0047  1303               	bcf	3,6	;RP1=0, select bank0
   948  0048  00A8               	movwf	___wmul@multiplier+1
   949  0049  0872               	movf	?_adc_amostra,w
   950  004A  00A7               	movwf	___wmul@multiplier
   951  004B  300A               	movlw	10
   952  004C  00A9               	movwf	___wmul@multiplicand
   953  004D  3000               	movlw	0
   954  004E  00AA               	movwf	___wmul@multiplicand+1
   955  004F  120A  118A  230E  120A  118A  	fcall	___wmul
   956  0054  1283               	bcf	3,5	;RP0=0, select bank0
   957  0055  1303               	bcf	3,6	;RP1=0, select bank0
   958  0056  0827               	movf	?___wmul,w
   959  0057  00AE               	movwf	??_init_temperature
   960  0058  0828               	movf	?___wmul+1,w
   961  0059  00AF               	movwf	??_init_temperature+1
   962  005A  1003               	clrc
   963  005B  0CAF               	rrf	??_init_temperature+1,f
   964  005C  0CAE               	rrf	??_init_temperature,f
   965  005D  082E               	movf	??_init_temperature,w
   966  005E  00AB               	movwf	init_temperature@tmp
   967  005F  082F               	movf	??_init_temperature+1,w
   968  0060  00AC               	movwf	init_temperature@tmp+1
   969  0061                     l1495:
   970                           
   971                           ;main.c: 72:         itoa(tmp,str);
   972  0061  082C               	movf	init_temperature@tmp+1,w
   973  0062  00A5               	movwf	itoa@val+1
   974  0063  082B               	movf	init_temperature@tmp,w
   975  0064  00A4               	movwf	itoa@val
   976  0065  082D               	movf	init_temperature@str,w
   977  0066  00FF               	movwf	btemp+1
   978  0067  087F               	movf	btemp+1,w
   979  0068  00A6               	movwf	itoa@str
   980  0069  120A  118A  21EA  120A  118A  	fcall	_itoa
   981  006E                     l1497:
   982                           
   983                           ;main.c: 73:         RA5 = 0;
   984  006E  1283               	bcf	3,5	;RP0=0, select bank0
   985  006F  1303               	bcf	3,6	;RP1=0, select bank0
   986  0070  1285               	bcf	5,5	;volatile
   987  0071                     l1499:
   988                           
   989                           ;main.c: 74:         RA4 = 1;
   990  0071  1605               	bsf	5,4	;volatile
   991  0072                     l1501:
   992                           
   993                           ;main.c: 75:         unsigned char y= str[2];
   994  0072  082D               	movf	init_temperature@str,w
   995  0073  3E02               	addlw	2
   996  0074  0084               	movwf	4
   997  0075  1383               	bcf	3,7	;select IRP bank0
   998  0076  0800               	movf	0,w
   999  0077  00FF               	movwf	btemp+1
  1000  0078  087F               	movf	btemp+1,w
  1001  0079  00B2               	movwf	init_temperature@y
  1002  007A                     l1503:
  1003                           
  1004                           ;main.c: 76:         PORTD=display7s(y);
  1005  007A  0832               	movf	init_temperature@y,w
  1006  007B  120A  118A  218B  120A  118A  	fcall	_display7s
  1007  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0082  0088               	movwf	8	;volatile
  1010  0083                     l1505:
  1011                           
  1012                           ;main.c: 77:         _delay((unsigned long)((30)*(8000000/4000.0)));
  1013  0083  304E               	movlw	78
  1014  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0086  00AF               	movwf	??_init_temperature+1
  1017  0087  30EA               	movlw	234
  1018  0088  00AE               	movwf	??_init_temperature
  1019  0089                     u747:
  1020  0089  0BAE               	decfsz	??_init_temperature,f
  1021  008A  2889               	goto	u747
  1022  008B  0BAF               	decfsz	??_init_temperature+1,f
  1023  008C  2889               	goto	u747
  1024  008D  0000               	nop
  1025  008E                     l1507:
  1026                           
  1027                           ;main.c: 78:         RA4 = 0;
  1028  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1029  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0090  1205               	bcf	5,4	;volatile
  1031  0091                     l1509:
  1032                           
  1033                           ;main.c: 79:         RA5 = 1;
  1034  0091  1685               	bsf	5,5	;volatile
  1035  0092                     l1511:
  1036                           
  1037                           ;main.c: 80:         unsigned char x= str[3];
  1038  0092  082D               	movf	init_temperature@str,w
  1039  0093  3E03               	addlw	3
  1040  0094  0084               	movwf	4
  1041  0095  1383               	bcf	3,7	;select IRP bank0
  1042  0096  0800               	movf	0,w
  1043  0097  00FF               	movwf	btemp+1
  1044  0098  087F               	movf	btemp+1,w
  1045  0099  00B3               	movwf	init_temperature@x
  1046  009A                     l1513:
  1047                           
  1048                           ;main.c: 81:         PORTD=display7s(x);
  1049  009A  0833               	movf	init_temperature@x,w
  1050  009B  120A  118A  218B  120A  118A  	fcall	_display7s
  1051  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1052  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1053  00A2  0088               	movwf	8	;volatile
  1054  00A3                     l1515:
  1055                           
  1056                           ;main.c: 82:         _delay((unsigned long)((30)*(8000000/4000.0)));
  1057  00A3  304E               	movlw	78
  1058  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1059  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1060  00A6  00AF               	movwf	??_init_temperature+1
  1061  00A7  30EA               	movlw	234
  1062  00A8  00AE               	movwf	??_init_temperature
  1063  00A9                     u757:
  1064  00A9  0BAE               	decfsz	??_init_temperature,f
  1065  00AA  28A9               	goto	u757
  1066  00AB  0BAF               	decfsz	??_init_temperature+1,f
  1067  00AC  28A9               	goto	u757
  1068  00AD  0000               	nop
  1069  00AE                     l1517:
  1070                           
  1071                           ;main.c: 83:         res = (y*10)+x;
  1072  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1073  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1074  00B0  0832               	movf	init_temperature@y,w
  1075  00B1  00AE               	movwf	??_init_temperature
  1076  00B2  01AF               	clrf	??_init_temperature+1
  1077  00B3  082E               	movf	??_init_temperature,w
  1078  00B4  00A7               	movwf	___wmul@multiplier
  1079  00B5  082F               	movf	??_init_temperature+1,w
  1080  00B6  00A8               	movwf	___wmul@multiplier+1
  1081  00B7  300A               	movlw	10
  1082  00B8  00A9               	movwf	___wmul@multiplicand
  1083  00B9  3000               	movlw	0
  1084  00BA  00AA               	movwf	___wmul@multiplicand+1
  1085  00BB  120A  118A  230E  120A  118A  	fcall	___wmul
  1086  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1087  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1088  00C2  0833               	movf	init_temperature@x,w
  1089  00C3  0727               	addwf	?___wmul,w
  1090  00C4  00B0               	movwf	init_temperature@res
  1091  00C5  3000               	movlw	0
  1092  00C6  1803               	skipnc
  1093  00C7  3001               	movlw	1
  1094  00C8  0728               	addwf	?___wmul+1,w
  1095  00C9  00B1               	movwf	init_temperature@res+1
  1096  00CA                     l1519:
  1097                           
  1098                           ;main.c: 69:     while (flag && res <= wantedTemp){
  1099  00CA  083A               	movf	_flag,w
  1100  00CB  043B               	iorwf	_flag+1,w
  1101  00CC  1903               	btfsc	3,2
  1102  00CD  28CF               	goto	u681
  1103  00CE  28D0               	goto	u680
  1104  00CF                     u681:
  1105  00CF  28DD               	goto	l1523
  1106  00D0                     u680:
  1107  00D0                     l1521:
  1108  00D0  0831               	movf	init_temperature@res+1,w
  1109  00D1  3A80               	xorlw	128
  1110  00D2  00FF               	movwf	btemp+1
  1111  00D3  3080               	movlw	128
  1112  00D4  027F               	subwf	btemp+1,w
  1113  00D5  1D03               	skipz
  1114  00D6  28D9               	goto	u695
  1115  00D7  303D               	movlw	61
  1116  00D8  0230               	subwf	init_temperature@res,w
  1117  00D9                     u695:
  1118  00D9  1C03               	skipc
  1119  00DA  28DC               	goto	u691
  1120  00DB  28DD               	goto	u690
  1121  00DC                     u691:
  1122  00DC  283C               	goto	l70
  1123  00DD                     u690:
  1124  00DD                     l1523:
  1125                           
  1126                           ;main.c: 85:     tempinit = 1;
  1127  00DD  3001               	movlw	1
  1128  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00E0  00BC               	movwf	_tempinit
  1131  00E1  3000               	movlw	0
  1132  00E2  00BD               	movwf	_tempinit+1
  1133  00E3                     l1525:
  1134                           
  1135                           ;main.c: 86:     RC5 = 0;
  1136  00E3  1287               	bcf	7,5	;volatile
  1137  00E4                     l74:
  1138  00E4  0008               	return
  1139  00E5                     __end_of_init_temperature:
  1140                           
  1141                           	psect	text2
  1142  01EA                     __ptext2:	
  1143 ;; *************** function _itoa *****************
  1144 ;; Defined at:
  1145 ;;		line 27 in file "itoa.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  val             2    4[BANK0 ] unsigned int 
  1148 ;;  str             1    6[BANK0 ] PTR unsigned char 
  1149 ;;		 -> str(6), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       3       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0
  1164 ;;      Totals:         0       3       0       0       0
  1165 ;;Total ram usage:        3 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    2
  1168 ;; This function calls:
  1169 ;;		___lwdiv
  1170 ;;		___lwmod
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;;		_init_temperature
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _itoa
  1179  01EA                     _itoa:
  1180  01EA                     l1471:	
  1181                           ;incstack = 0
  1182                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1183                           
  1184                           
  1185                           ;itoa.c: 27: void itoa(unsigned int val, unsigned char* str );itoa.c: 28: {;itoa.c: 32: 
      +                            str[2]=((val%1000)/100);
  1186  01EA  3064               	movlw	100
  1187  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1188  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1189  01ED  00A0               	movwf	___lwdiv@divisor
  1190  01EE  3000               	movlw	0
  1191  01EF  00A1               	movwf	___lwdiv@divisor+1
  1192  01F0  0825               	movf	itoa@val+1,w
  1193  01F1  00F5               	movwf	___lwmod@dividend+1
  1194  01F2  0824               	movf	itoa@val,w
  1195  01F3  00F4               	movwf	___lwmod@dividend
  1196  01F4  30E8               	movlw	232
  1197  01F5  00F2               	movwf	___lwmod@divisor
  1198  01F6  3003               	movlw	3
  1199  01F7  00F3               	movwf	___lwmod@divisor+1
  1200  01F8  120A  118A  22D4  120A  118A  	fcall	___lwmod
  1201  01FD  0873               	movf	?___lwmod+1,w
  1202  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1203  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0200  00A3               	movwf	___lwdiv@dividend+1
  1205  0201  0872               	movf	?___lwmod,w
  1206  0202  00A2               	movwf	___lwdiv@dividend
  1207  0203  120A  118A  228E  120A  118A  	fcall	___lwdiv
  1208  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1210  020A  0820               	movf	?___lwdiv,w
  1211  020B  00FF               	movwf	btemp+1
  1212  020C  0826               	movf	itoa@str,w
  1213  020D  3E02               	addlw	2
  1214  020E  0084               	movwf	4
  1215  020F  087F               	movf	btemp+1,w
  1216  0210  1383               	bcf	3,7	;select IRP bank0
  1217  0211  0080               	movwf	0
  1218                           
  1219                           ;itoa.c: 33:   str[3]=((val%100)/10);
  1220  0212  300A               	movlw	10
  1221  0213  00A0               	movwf	___lwdiv@divisor
  1222  0214  3000               	movlw	0
  1223  0215  00A1               	movwf	___lwdiv@divisor+1
  1224  0216  0825               	movf	itoa@val+1,w
  1225  0217  00F5               	movwf	___lwmod@dividend+1
  1226  0218  0824               	movf	itoa@val,w
  1227  0219  00F4               	movwf	___lwmod@dividend
  1228  021A  3064               	movlw	100
  1229  021B  00F2               	movwf	___lwmod@divisor
  1230  021C  3000               	movlw	0
  1231  021D  00F3               	movwf	___lwmod@divisor+1
  1232  021E  120A  118A  22D4  120A  118A  	fcall	___lwmod
  1233  0223  0873               	movf	?___lwmod+1,w
  1234  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0226  00A3               	movwf	___lwdiv@dividend+1
  1237  0227  0872               	movf	?___lwmod,w
  1238  0228  00A2               	movwf	___lwdiv@dividend
  1239  0229  120A  118A  228E  120A  118A  	fcall	___lwdiv
  1240  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1241  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0230  0820               	movf	?___lwdiv,w
  1243  0231  00FF               	movwf	btemp+1
  1244  0232  0826               	movf	itoa@str,w
  1245  0233  3E03               	addlw	3
  1246  0234  0084               	movwf	4
  1247  0235  087F               	movf	btemp+1,w
  1248  0236  1383               	bcf	3,7	;select IRP bank0
  1249  0237  0080               	movwf	0
  1250  0238                     l1473:
  1251                           
  1252                           ;itoa.c: 34:   if (str[3] != 0)
  1253  0238  0826               	movf	itoa@str,w
  1254  0239  3E03               	addlw	3
  1255  023A  0084               	movwf	4
  1256  023B  0800               	movf	0,w
  1257  023C  1903               	btfsc	3,2
  1258  023D  2A3F               	goto	u631
  1259  023E  2A40               	goto	u630
  1260  023F                     u631:
  1261  023F  2A45               	goto	l113
  1262  0240                     u630:
  1263  0240                     l1475:
  1264                           
  1265                           ;itoa.c: 35:       str[3]-=1;
  1266  0240  0826               	movf	itoa@str,w
  1267  0241  3E03               	addlw	3
  1268  0242  0084               	movwf	4
  1269  0243  3001               	movlw	1
  1270  0244  0280               	subwf	0,f
  1271  0245                     l113:
  1272  0245  0008               	return
  1273  0246                     __end_of_itoa:
  1274                           
  1275                           	psect	text3
  1276  02D4                     __ptext3:	
  1277 ;; *************** function ___lwmod *****************
  1278 ;; Defined at:
  1279 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  divisor         2    2[COMMON] unsigned int 
  1282 ;;  dividend        2    4[COMMON] unsigned int 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  counter         1    6[COMMON] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2    2[COMMON] unsigned int 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, btemp+1
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         4       0       0       0       0
  1295 ;;      Locals:         1       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         5       0       0       0       0
  1298 ;;Total ram usage:        5 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_itoa
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function ___lwmod
  1310  02D4                     ___lwmod:
  1311  02D4                     l1145:	
  1312                           ;incstack = 0
  1313                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1314                           
  1315  02D4  0872               	movf	___lwmod@divisor,w
  1316  02D5  0473               	iorwf	___lwmod@divisor+1,w
  1317  02D6  1903               	btfsc	3,2
  1318  02D7  2AD9               	goto	u351
  1319  02D8  2ADA               	goto	u350
  1320  02D9                     u351:
  1321  02D9  2B09               	goto	l1163
  1322  02DA                     u350:
  1323  02DA                     l1147:
  1324  02DA  01F6               	clrf	___lwmod@counter
  1325  02DB  0AF6               	incf	___lwmod@counter,f
  1326  02DC  2AE8               	goto	l1153
  1327  02DD                     l1149:
  1328  02DD  3001               	movlw	1
  1329  02DE                     u365:
  1330  02DE  1003               	clrc
  1331  02DF  0DF2               	rlf	___lwmod@divisor,f
  1332  02E0  0DF3               	rlf	___lwmod@divisor+1,f
  1333  02E1  3EFF               	addlw	-1
  1334  02E2  1D03               	skipz
  1335  02E3  2ADE               	goto	u365
  1336  02E4                     l1151:
  1337  02E4  3001               	movlw	1
  1338  02E5  00FF               	movwf	btemp+1
  1339  02E6  087F               	movf	btemp+1,w
  1340  02E7  07F6               	addwf	___lwmod@counter,f
  1341  02E8                     l1153:
  1342  02E8  1FF3               	btfss	___lwmod@divisor+1,7
  1343  02E9  2AEB               	goto	u371
  1344  02EA  2AEC               	goto	u370
  1345  02EB                     u371:
  1346  02EB  2ADD               	goto	l1149
  1347  02EC                     u370:
  1348  02EC                     l1155:
  1349  02EC  0873               	movf	___lwmod@divisor+1,w
  1350  02ED  0275               	subwf	___lwmod@dividend+1,w
  1351  02EE  1D03               	skipz
  1352  02EF  2AF2               	goto	u385
  1353  02F0  0872               	movf	___lwmod@divisor,w
  1354  02F1  0274               	subwf	___lwmod@dividend,w
  1355  02F2                     u385:
  1356  02F2  1C03               	skipc
  1357  02F3  2AF5               	goto	u381
  1358  02F4  2AF6               	goto	u380
  1359  02F5                     u381:
  1360  02F5  2AFC               	goto	l1159
  1361  02F6                     u380:
  1362  02F6                     l1157:
  1363  02F6  0872               	movf	___lwmod@divisor,w
  1364  02F7  02F4               	subwf	___lwmod@dividend,f
  1365  02F8  0873               	movf	___lwmod@divisor+1,w
  1366  02F9  1C03               	skipc
  1367  02FA  03F5               	decf	___lwmod@dividend+1,f
  1368  02FB  02F5               	subwf	___lwmod@dividend+1,f
  1369  02FC                     l1159:
  1370  02FC  3001               	movlw	1
  1371  02FD                     u395:
  1372  02FD  1003               	clrc
  1373  02FE  0CF3               	rrf	___lwmod@divisor+1,f
  1374  02FF  0CF2               	rrf	___lwmod@divisor,f
  1375  0300  3EFF               	addlw	-1
  1376  0301  1D03               	skipz
  1377  0302  2AFD               	goto	u395
  1378  0303                     l1161:
  1379  0303  3001               	movlw	1
  1380  0304  02F6               	subwf	___lwmod@counter,f
  1381  0305  1D03               	btfss	3,2
  1382  0306  2B08               	goto	u401
  1383  0307  2B09               	goto	u400
  1384  0308                     u401:
  1385  0308  2AEC               	goto	l1155
  1386  0309                     u400:
  1387  0309                     l1163:
  1388  0309  0875               	movf	___lwmod@dividend+1,w
  1389  030A  00F3               	movwf	?___lwmod+1
  1390  030B  0874               	movf	___lwmod@dividend,w
  1391  030C  00F2               	movwf	?___lwmod
  1392  030D                     l527:
  1393  030D  0008               	return
  1394  030E                     __end_of___lwmod:
  1395                           
  1396                           	psect	text4
  1397  028E                     __ptext4:	
  1398 ;; *************** function ___lwdiv *****************
  1399 ;; Defined at:
  1400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  divisor         2    0[BANK0 ] unsigned int 
  1403 ;;  dividend        2    2[BANK0 ] unsigned int 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  quotient        2    8[COMMON] unsigned int 
  1406 ;;  counter         1    7[COMMON] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2    0[BANK0 ] unsigned int 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, btemp+1
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       4       0       0       0
  1417 ;;      Locals:         3       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0
  1419 ;;      Totals:         3       4       0       0       0
  1420 ;;Total ram usage:        7 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_itoa
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function ___lwdiv
  1432  028E                     ___lwdiv:
  1433  028E                     l1425:	
  1434                           ;incstack = 0
  1435                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1436                           
  1437  028E  01F8               	clrf	___lwdiv@quotient
  1438  028F  01F9               	clrf	___lwdiv@quotient+1
  1439  0290                     l1427:
  1440  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0292  0820               	movf	___lwdiv@divisor,w
  1443  0293  0421               	iorwf	___lwdiv@divisor+1,w
  1444  0294  1903               	btfsc	3,2
  1445  0295  2A97               	goto	u541
  1446  0296  2A98               	goto	u540
  1447  0297                     u541:
  1448  0297  2ACF               	goto	l1447
  1449  0298                     u540:
  1450  0298                     l1429:
  1451  0298  01F7               	clrf	___lwdiv@counter
  1452  0299  0AF7               	incf	___lwdiv@counter,f
  1453  029A  2AA6               	goto	l1435
  1454  029B                     l1431:
  1455  029B  3001               	movlw	1
  1456  029C                     u555:
  1457  029C  1003               	clrc
  1458  029D  0DA0               	rlf	___lwdiv@divisor,f
  1459  029E  0DA1               	rlf	___lwdiv@divisor+1,f
  1460  029F  3EFF               	addlw	-1
  1461  02A0  1D03               	skipz
  1462  02A1  2A9C               	goto	u555
  1463  02A2                     l1433:
  1464  02A2  3001               	movlw	1
  1465  02A3  00FF               	movwf	btemp+1
  1466  02A4  087F               	movf	btemp+1,w
  1467  02A5  07F7               	addwf	___lwdiv@counter,f
  1468  02A6                     l1435:
  1469  02A6  1FA1               	btfss	___lwdiv@divisor+1,7
  1470  02A7  2AA9               	goto	u561
  1471  02A8  2AAA               	goto	u560
  1472  02A9                     u561:
  1473  02A9  2A9B               	goto	l1431
  1474  02AA                     u560:
  1475  02AA                     l1437:
  1476  02AA  3001               	movlw	1
  1477  02AB                     u575:
  1478  02AB  1003               	clrc
  1479  02AC  0DF8               	rlf	___lwdiv@quotient,f
  1480  02AD  0DF9               	rlf	___lwdiv@quotient+1,f
  1481  02AE  3EFF               	addlw	-1
  1482  02AF  1D03               	skipz
  1483  02B0  2AAB               	goto	u575
  1484  02B1  0821               	movf	___lwdiv@divisor+1,w
  1485  02B2  0223               	subwf	___lwdiv@dividend+1,w
  1486  02B3  1D03               	skipz
  1487  02B4  2AB7               	goto	u585
  1488  02B5  0820               	movf	___lwdiv@divisor,w
  1489  02B6  0222               	subwf	___lwdiv@dividend,w
  1490  02B7                     u585:
  1491  02B7  1C03               	skipc
  1492  02B8  2ABA               	goto	u581
  1493  02B9  2ABB               	goto	u580
  1494  02BA                     u581:
  1495  02BA  2AC2               	goto	l1443
  1496  02BB                     u580:
  1497  02BB                     l1439:
  1498  02BB  0820               	movf	___lwdiv@divisor,w
  1499  02BC  02A2               	subwf	___lwdiv@dividend,f
  1500  02BD  0821               	movf	___lwdiv@divisor+1,w
  1501  02BE  1C03               	skipc
  1502  02BF  03A3               	decf	___lwdiv@dividend+1,f
  1503  02C0  02A3               	subwf	___lwdiv@dividend+1,f
  1504  02C1                     l1441:
  1505  02C1  1478               	bsf	___lwdiv@quotient,0
  1506  02C2                     l1443:
  1507  02C2  3001               	movlw	1
  1508  02C3                     u595:
  1509  02C3  1003               	clrc
  1510  02C4  0CA1               	rrf	___lwdiv@divisor+1,f
  1511  02C5  0CA0               	rrf	___lwdiv@divisor,f
  1512  02C6  3EFF               	addlw	-1
  1513  02C7  1D03               	skipz
  1514  02C8  2AC3               	goto	u595
  1515  02C9                     l1445:
  1516  02C9  3001               	movlw	1
  1517  02CA  02F7               	subwf	___lwdiv@counter,f
  1518  02CB  1D03               	btfss	3,2
  1519  02CC  2ACE               	goto	u601
  1520  02CD  2ACF               	goto	u600
  1521  02CE                     u601:
  1522  02CE  2AAA               	goto	l1437
  1523  02CF                     u600:
  1524  02CF                     l1447:
  1525  02CF  0879               	movf	___lwdiv@quotient+1,w
  1526  02D0  00A1               	movwf	?___lwdiv+1
  1527  02D1  0878               	movf	___lwdiv@quotient,w
  1528  02D2  00A0               	movwf	?___lwdiv
  1529  02D3                     l517:
  1530  02D3  0008               	return
  1531  02D4                     __end_of___lwdiv:
  1532                           
  1533                           	psect	text5
  1534  018B                     __ptext5:	
  1535 ;; *************** function _display7s *****************
  1536 ;; Defined at:
  1537 ;;		line 8 in file "7-Segment.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  v               1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  v               1    4[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      unsigned char 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0
  1553 ;;      Temps:          2       0       0       0       0
  1554 ;;      Totals:         3       0       0       0       0
  1555 ;;Total ram usage:        3 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;;		_init_temperature
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _display7s
  1568  018B                     _display7s:
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _display7s: [wreg-fsr0h+status,2+status,0]
  1572                           ;display7s@v stored from wreg
  1573  018B  00F4               	movwf	display7s@v
  1574  018C                     l1193:
  1575  018C  29AF               	goto	l1265
  1576  018D                     l1195:
  1577  018D  303F               	movlw	63
  1578  018E  29E9               	goto	l142
  1579  018F                     l1199:
  1580  018F  3006               	movlw	6
  1581  0190  29E9               	goto	l142
  1582  0191                     l1203:
  1583  0191  305B               	movlw	91
  1584  0192  29E9               	goto	l142
  1585  0193                     l1207:
  1586  0193  304F               	movlw	79
  1587  0194  29E9               	goto	l142
  1588  0195                     l1211:
  1589  0195  3066               	movlw	102
  1590  0196  29E9               	goto	l142
  1591  0197                     l1215:
  1592  0197  306D               	movlw	109
  1593  0198  29E9               	goto	l142
  1594  0199                     l1219:
  1595  0199  307D               	movlw	125
  1596  019A  29E9               	goto	l142
  1597  019B                     l1223:
  1598  019B  3007               	movlw	7
  1599  019C  29E9               	goto	l142
  1600  019D                     l1227:
  1601  019D  307F               	movlw	127
  1602  019E  29E9               	goto	l142
  1603  019F                     l1231:
  1604  019F  306F               	movlw	111
  1605  01A0  29E9               	goto	l142
  1606  01A1                     l1235:
  1607  01A1  3077               	movlw	119
  1608  01A2  29E9               	goto	l142
  1609  01A3                     l1239:
  1610  01A3  307C               	movlw	124
  1611  01A4  29E9               	goto	l142
  1612  01A5                     l1243:
  1613  01A5  3058               	movlw	88
  1614  01A6  29E9               	goto	l142
  1615  01A7                     l1247:
  1616  01A7  305E               	movlw	94
  1617  01A8  29E9               	goto	l142
  1618  01A9                     l1251:
  1619  01A9  3079               	movlw	121
  1620  01AA  29E9               	goto	l142
  1621  01AB                     l1255:
  1622  01AB  3071               	movlw	113
  1623  01AC  29E9               	goto	l142
  1624  01AD                     l1259:
  1625  01AD  3000               	movlw	0
  1626  01AE  29E9               	goto	l142
  1627  01AF                     l1265:
  1628  01AF  0874               	movf	display7s@v,w
  1629  01B0  00F2               	movwf	??_display7s
  1630  01B1  01F3               	clrf	??_display7s+1
  1631                           
  1632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 1, Range of values is 0 to 0
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte            4     3 (average)
  1638                           ; direct_byte           11     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641  01B2  0873               	movf	??_display7s+1,w
  1642  01B3  3A00               	xorlw	0	; case 0
  1643  01B4  1903               	skipnz
  1644  01B5  29B7               	goto	l1617
  1645  01B6  29AD               	goto	l1259
  1646  01B7                     l1617:
  1647                           
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 16, Range of values is 0 to 15
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte           49    25 (average)
  1653                           ; direct_byte           56     8 (fixed)
  1654                           ; jumptable            260     6 (fixed)
  1655                           ;	Chosen strategy is simple_byte
  1656  01B7  0872               	movf	??_display7s,w
  1657  01B8  3A00               	xorlw	0	; case 0
  1658  01B9  1903               	skipnz
  1659  01BA  298D               	goto	l1195
  1660  01BB  3A01               	xorlw	1	; case 1
  1661  01BC  1903               	skipnz
  1662  01BD  298F               	goto	l1199
  1663  01BE  3A03               	xorlw	3	; case 2
  1664  01BF  1903               	skipnz
  1665  01C0  2991               	goto	l1203
  1666  01C1  3A01               	xorlw	1	; case 3
  1667  01C2  1903               	skipnz
  1668  01C3  2993               	goto	l1207
  1669  01C4  3A07               	xorlw	7	; case 4
  1670  01C5  1903               	skipnz
  1671  01C6  2995               	goto	l1211
  1672  01C7  3A01               	xorlw	1	; case 5
  1673  01C8  1903               	skipnz
  1674  01C9  2997               	goto	l1215
  1675  01CA  3A03               	xorlw	3	; case 6
  1676  01CB  1903               	skipnz
  1677  01CC  2999               	goto	l1219
  1678  01CD  3A01               	xorlw	1	; case 7
  1679  01CE  1903               	skipnz
  1680  01CF  299B               	goto	l1223
  1681  01D0  3A0F               	xorlw	15	; case 8
  1682  01D1  1903               	skipnz
  1683  01D2  299D               	goto	l1227
  1684  01D3  3A01               	xorlw	1	; case 9
  1685  01D4  1903               	skipnz
  1686  01D5  299F               	goto	l1231
  1687  01D6  3A03               	xorlw	3	; case 10
  1688  01D7  1903               	skipnz
  1689  01D8  29A1               	goto	l1235
  1690  01D9  3A01               	xorlw	1	; case 11
  1691  01DA  1903               	skipnz
  1692  01DB  29A3               	goto	l1239
  1693  01DC  3A07               	xorlw	7	; case 12
  1694  01DD  1903               	skipnz
  1695  01DE  29A5               	goto	l1243
  1696  01DF  3A01               	xorlw	1	; case 13
  1697  01E0  1903               	skipnz
  1698  01E1  29A7               	goto	l1247
  1699  01E2  3A03               	xorlw	3	; case 14
  1700  01E3  1903               	skipnz
  1701  01E4  29A9               	goto	l1251
  1702  01E5  3A01               	xorlw	1	; case 15
  1703  01E6  1903               	skipnz
  1704  01E7  29AB               	goto	l1255
  1705  01E8  29AD               	goto	l1259
  1706  01E9                     l142:
  1707  01E9  0008               	return
  1708  01EA                     __end_of_display7s:
  1709                           
  1710                           	psect	text6
  1711  0246                     __ptext6:	
  1712 ;; *************** function _adc_amostra *****************
  1713 ;; Defined at:
  1714 ;;		line 44 in file "adc.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  canal           1    wreg     unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  canal           1    4[COMMON] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2    2[COMMON] unsigned int 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         2       0       0       0       0
  1729 ;;      Locals:         1       0       0       0       0
  1730 ;;      Temps:          0       7       0       0       0
  1731 ;;      Totals:         3       7       0       0       0
  1732 ;;Total ram usage:       10 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;;		_init_temperature
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _adc_amostra
  1745  0246                     _adc_amostra:
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _adc_amostra: [wreg-fsr0h+status,2+status,0]
  1749                           ;adc_amostra@canal stored from wreg
  1750  0246  00F4               	movwf	adc_amostra@canal
  1751  0247                     l1451:
  1752                           
  1753                           ;adc.c: 44: unsigned int adc_amostra(unsigned char canal);adc.c: 45: {;adc.c: 62:      s
      +                          witch(canal)
  1754  0247  2A51               	goto	l1461
  1755  0248                     l1453:
  1756                           
  1757                           ;adc.c: 65:         ADCON0=0x01;
  1758  0248  3001               	movlw	1
  1759  0249  009F               	movwf	31	;volatile
  1760                           
  1761                           ;adc.c: 66:         break;
  1762  024A  2A66               	goto	l103
  1763  024B                     l1455:
  1764                           
  1765                           ;adc.c: 68:         ADCON0=0x09;
  1766  024B  3009               	movlw	9
  1767  024C  009F               	movwf	31	;volatile
  1768                           
  1769                           ;adc.c: 69:         break;
  1770  024D  2A66               	goto	l103
  1771  024E                     l1457:
  1772                           
  1773                           ;adc.c: 71:         ADCON0=0x11;
  1774  024E  3011               	movlw	17
  1775  024F  009F               	movwf	31	;volatile
  1776                           
  1777                           ;adc.c: 72:         break;
  1778  0250  2A66               	goto	l103
  1779  0251                     l1461:
  1780  0251  0874               	movf	adc_amostra@canal,w
  1781  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0254  00A0               	movwf	??_adc_amostra
  1784  0255  01A1               	clrf	??_adc_amostra+1
  1785                           
  1786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1787                           ; Switch size 1, requested type "simple"
  1788                           ; Number of cases is 1, Range of values is 0 to 0
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte            4     3 (average)
  1792                           ; direct_byte           11     8 (fixed)
  1793                           ; jumptable            260     6 (fixed)
  1794                           ;	Chosen strategy is simple_byte
  1795  0256  0821               	movf	??_adc_amostra+1,w
  1796  0257  3A00               	xorlw	0	; case 0
  1797  0258  1903               	skipnz
  1798  0259  2A5B               	goto	l1619
  1799  025A  2A66               	goto	l103
  1800  025B                     l1619:
  1801                           
  1802                           ; Switch size 1, requested type "simple"
  1803                           ; Number of cases is 3, Range of values is 0 to 2
  1804                           ; switch strategies available:
  1805                           ; Name         Instructions Cycles
  1806                           ; simple_byte           10     6 (average)
  1807                           ; direct_byte           17     8 (fixed)
  1808                           ; jumptable            260     6 (fixed)
  1809                           ;	Chosen strategy is simple_byte
  1810  025B  0820               	movf	??_adc_amostra,w
  1811  025C  3A00               	xorlw	0	; case 0
  1812  025D  1903               	skipnz
  1813  025E  2A48               	goto	l1453
  1814  025F  3A01               	xorlw	1	; case 1
  1815  0260  1903               	skipnz
  1816  0261  2A4B               	goto	l1455
  1817  0262  3A03               	xorlw	3	; case 2
  1818  0263  1903               	skipnz
  1819  0264  2A4E               	goto	l1457
  1820  0265  2A66               	goto	l103
  1821  0266                     l103:
  1822                           
  1823                           ;adc.c: 77:     ADCON0bits.GO=1;
  1824  0266  151F               	bsf	31,2	;volatile
  1825  0267                     l106:	
  1826                           ;adc.c: 78:     while(ADCON0bits.GO == 1);
  1827                           
  1828  0267  191F               	btfsc	31,2	;volatile
  1829  0268  2A6A               	goto	u611
  1830  0269  2A6B               	goto	u610
  1831  026A                     u611:
  1832  026A  2A67               	goto	l106
  1833  026B                     u610:
  1834  026B                     l1463:
  1835                           
  1836                           ;adc.c: 80:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1837  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1838  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1839  026D  081E               	movf	30,w	;volatile
  1840  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1841  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0270  00A0               	movwf	??_adc_amostra
  1843  0271  3006               	movlw	6
  1844  0272                     u625:
  1845  0272  1003               	clrc
  1846  0273  0CA0               	rrf	??_adc_amostra,f
  1847  0274  3EFF               	addlw	-1
  1848  0275  1D03               	skipz
  1849  0276  2A72               	goto	u625
  1850  0277  0820               	movf	??_adc_amostra,w
  1851  0278  00A1               	movwf	??_adc_amostra+1
  1852  0279  01A2               	clrf	??_adc_amostra+2
  1853  027A  081E               	movf	30,w	;volatile
  1854  027B  00A3               	movwf	??_adc_amostra+3
  1855  027C  01A4               	clrf	??_adc_amostra+4
  1856  027D  1003               	clrc
  1857  027E  0DA3               	rlf	??_adc_amostra+3,f
  1858  027F  0DA4               	rlf	??_adc_amostra+4,f
  1859  0280  1003               	clrc
  1860  0281  0DA3               	rlf	??_adc_amostra+3,f
  1861  0282  0DA4               	rlf	??_adc_amostra+4,f
  1862  0283  0821               	movf	??_adc_amostra+1,w
  1863  0284  0423               	iorwf	??_adc_amostra+3,w
  1864  0285  00A5               	movwf	??_adc_amostra+5
  1865  0286  0822               	movf	??_adc_amostra+2,w
  1866  0287  0424               	iorwf	??_adc_amostra+4,w
  1867  0288  00A6               	movwf	??_adc_amostra+6
  1868  0289  0825               	movf	??_adc_amostra+5,w
  1869  028A  00F2               	movwf	?_adc_amostra
  1870  028B  0826               	movf	??_adc_amostra+6,w
  1871  028C  00F3               	movwf	?_adc_amostra+1
  1872  028D                     l109:
  1873  028D  0008               	return
  1874  028E                     __end_of_adc_amostra:
  1875                           
  1876                           	psect	text7
  1877  030E                     __ptext7:	
  1878 ;; *************** function ___wmul *****************
  1879 ;; Defined at:
  1880 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  multiplier      2    7[BANK0 ] unsigned int 
  1883 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  product         2    5[COMMON] unsigned int 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2    7[BANK0 ] unsigned int 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       4       0       0       0
  1896 ;;      Locals:         2       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0
  1898 ;;      Totals:         2       4       0       0       0
  1899 ;;Total ram usage:        6 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;;		_init_temperature
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function ___wmul
  1912  030E                     ___wmul:
  1913  030E                     l1477:	
  1914                           ;incstack = 0
  1915                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1916                           
  1917  030E  01F5               	clrf	___wmul@product
  1918  030F  01F6               	clrf	___wmul@product+1
  1919  0310                     l1479:
  1920  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0312  1C27               	btfss	___wmul@multiplier,0
  1923  0313  2B15               	goto	u641
  1924  0314  2B16               	goto	u640
  1925  0315                     u641:
  1926  0315  2B1C               	goto	l245
  1927  0316                     u640:
  1928  0316                     l1481:
  1929  0316  0829               	movf	___wmul@multiplicand,w
  1930  0317  07F5               	addwf	___wmul@product,f
  1931  0318  1803               	skipnc
  1932  0319  0AF6               	incf	___wmul@product+1,f
  1933  031A  082A               	movf	___wmul@multiplicand+1,w
  1934  031B  07F6               	addwf	___wmul@product+1,f
  1935  031C                     l245:
  1936  031C  3001               	movlw	1
  1937  031D                     u655:
  1938  031D  1003               	clrc
  1939  031E  0DA9               	rlf	___wmul@multiplicand,f
  1940  031F  0DAA               	rlf	___wmul@multiplicand+1,f
  1941  0320  3EFF               	addlw	-1
  1942  0321  1D03               	skipz
  1943  0322  2B1D               	goto	u655
  1944  0323                     l1483:
  1945  0323  3001               	movlw	1
  1946  0324                     u665:
  1947  0324  1003               	clrc
  1948  0325  0CA8               	rrf	___wmul@multiplier+1,f
  1949  0326  0CA7               	rrf	___wmul@multiplier,f
  1950  0327  3EFF               	addlw	-1
  1951  0328  1D03               	skipz
  1952  0329  2B24               	goto	u665
  1953  032A                     l1485:
  1954  032A  0827               	movf	___wmul@multiplier,w
  1955  032B  0428               	iorwf	___wmul@multiplier+1,w
  1956  032C  1D03               	btfss	3,2
  1957  032D  2B2F               	goto	u671
  1958  032E  2B30               	goto	u670
  1959  032F                     u671:
  1960  032F  2B10               	goto	l1479
  1961  0330                     u670:
  1962  0330                     l1487:
  1963  0330  0876               	movf	___wmul@product+1,w
  1964  0331  00A8               	movwf	?___wmul+1
  1965  0332  0875               	movf	___wmul@product,w
  1966  0333  00A7               	movwf	?___wmul
  1967  0334                     l247:
  1968  0334  0008               	return
  1969  0335                     __end_of___wmul:
  1970                           
  1971                           	psect	text8
  1972  0350                     __ptext8:	
  1973 ;; *************** function _adc_init *****************
  1974 ;; Defined at:
  1975 ;;		line 30 in file "adc.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _adc_init
  2005  0350                     _adc_init:
  2006  0350                     l1287:	
  2007                           ;incstack = 0
  2008                           ; Regs used in _adc_init: [wreg]
  2009                           
  2010                           
  2011                           ;adc.c: 33:   ADCON1=0x02;
  2012  0350  3002               	movlw	2
  2013  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0353  009F               	movwf	31	;volatile
  2016                           
  2017                           ;adc.c: 34:   ADCON0=0x41;
  2018  0354  3041               	movlw	65
  2019  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0357  009F               	movwf	31	;volatile
  2022  0358                     l98:
  2023  0358  0008               	return
  2024  0359                     __end_of_adc_init:
  2025                           
  2026                           	psect	text9
  2027  0359                     __ptext9:	
  2028 ;; *************** function _IRQ_RB0_init *****************
  2029 ;; Defined at:
  2030 ;;		line 103 in file "main.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		None
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _IRQ_RB0_init
  2060  0359                     _IRQ_RB0_init:
  2061  0359                     l1285:	
  2062                           ;incstack = 0
  2063                           ; Regs used in _IRQ_RB0_init: []
  2064                           
  2065                           
  2066                           ;main.c: 105:     INTE = 1;
  2067  0359  160B               	bsf	11,4	;volatile
  2068                           
  2069                           ;main.c: 107:     INTEDG = 0;
  2070  035A  1683               	bsf	3,5	;RP0=1, select bank1
  2071  035B  1303               	bcf	3,6	;RP1=0, select bank1
  2072  035C  1301               	bcf	1,6	;volatile
  2073                           
  2074                           ;main.c: 109:     GIE = 1;
  2075  035D  178B               	bsf	11,7	;volatile
  2076  035E                     l85:
  2077  035E  0008               	return
  2078  035F                     __end_of_IRQ_RB0_init:
  2079                           
  2080                           	psect	text10
  2081  0335                     __ptext10:	
  2082 ;; *************** function _ISR *****************
  2083 ;; Defined at:
  2084 ;;		line 89 in file "main.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0
  2100 ;;      Temps:          2       0       0       0       0
  2101 ;;      Totals:         2       0       0       0       0
  2102 ;;Total ram usage:        2 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		Interrupt level 1
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           
  2112                           ;psect for function _ISR
  2113  0335                     _ISR:
  2114  0335                     i1l1375:
  2115                           
  2116                           ;main.c: 91:   if (INTF)
  2117  0335  1C8B               	btfss	11,1	;volatile
  2118  0336  2B38               	goto	u52_21
  2119  0337  2B39               	goto	u52_20
  2120  0338                     u52_21:
  2121  0338  2B49               	goto	i1l82
  2122  0339                     u52_20:
  2123  0339                     i1l1377:
  2124                           
  2125                           ;main.c: 92:   {;main.c: 93:     INTF = 0;
  2126  0339  108B               	bcf	11,1	;volatile
  2127  033A                     i1l1379:
  2128                           
  2129                           ;main.c: 94:     if (flag)
  2130  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2131  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2132  033C  083A               	movf	_flag,w
  2133  033D  043B               	iorwf	_flag+1,w
  2134  033E  1903               	btfsc	3,2
  2135  033F  2B41               	goto	u53_21
  2136  0340  2B42               	goto	u53_20
  2137  0341                     u53_21:
  2138  0341  2B45               	goto	i1l1383
  2139  0342                     u53_20:
  2140  0342                     i1l1381:
  2141                           
  2142                           ;main.c: 95:     {;main.c: 96:         flag = 0;
  2143  0342  01BA               	clrf	_flag
  2144  0343  01BB               	clrf	_flag+1
  2145                           
  2146                           ;main.c: 97:     }else{
  2147  0344  2B49               	goto	i1l82
  2148  0345                     i1l1383:
  2149                           
  2150                           ;main.c: 98:         flag = 1;
  2151  0345  3001               	movlw	1
  2152  0346  00BA               	movwf	_flag
  2153  0347  3000               	movlw	0
  2154  0348  00BB               	movwf	_flag+1
  2155  0349                     i1l82:
  2156  0349  0871               	movf	??_ISR+1,w
  2157  034A  008A               	movwf	10
  2158  034B  0E70               	swapf	??_ISR^(0+4294967168),w
  2159  034C  0083               	movwf	3
  2160  034D  0EFE               	swapf	btemp,f
  2161  034E  0E7E               	swapf	btemp,w
  2162  034F  0009               	retfie
  2163  0350                     __end_of_ISR:
  2164  007E                     btemp	set	126	;btemp
  2165  007E                     wtemp0	set	126
  2166                           
  2167                           	psect	intentry
  2168  0004                     __pintentry:	
  2169                           ;incstack = 0
  2170                           ; Regs used in _ISR: [wreg+status,2+status,0]
  2171                           
  2172  0004                     interrupt_function:
  2173  007E                     saved_w	set	btemp
  2174  0004  00FE               	movwf	btemp
  2175  0005  0E03               	swapf	3,w
  2176  0006  00F0               	movwf	??_ISR
  2177  0007  080A               	movf	10,w
  2178  0008  00F1               	movwf	??_ISR+1
  2179  0009  120A  118A  2B35   	ljmp	_ISR
  2180                           
  2181                           	psect	config
  2182                           
  2183                           ;Config register CONFIG @ 0x2007
  2184                           ;	Oscillator Selection bits
  2185                           ;	FOSC = HS, HS oscillator
  2186                           ;	Watchdog Timer Enable bit
  2187                           ;	WDTE = OFF, WDT disabled
  2188                           ;	Power-up Timer Enable bit
  2189                           ;	PWRTE = OFF, PWRT disabled
  2190                           ;	Brown-out Reset Enable bit
  2191                           ;	BOREN = OFF, BOR disabled
  2192                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2193                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2194                           ;	Data EEPROM Memory Code Protection bit
  2195                           ;	CPD = OFF, Data EEPROM code protection off
  2196                           ;	Flash Program Memory Write Enable bits
  2197                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2198                           ;	In-Circuit Debugger Mode bit
  2199                           ;	DEBUG = 0x1, unprogrammed default
  2200                           ;	Flash Program Memory Code Protection bit
  2201                           ;	CP = OFF, Code protection off
  2202  2007                     	org	8199
  2203  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(1) Largest target is 6
		 -> str(BANK0[6]), 

    init_temperature@str	PTR unsigned char  size(1) Largest target is 6
		 -> str(BANK0[6]), 


Critical Paths under _main in COMMON

    _itoa->___lwdiv
    ___lwdiv->___lwmod
    ___wmul->_adc_amostra

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_init_temperature
    _init_temperature->___wmul
    _itoa->___lwdiv
    ___wmul->_adc_amostra

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5220
                                             20 BANK0      4     4      0
                       _IRQ_RB0_init
                             ___wmul
                        _adc_amostra
                           _adc_init
                          _display7s
                   _init_temperature
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _init_temperature                                     9     6      3    2813
                                             11 BANK0      9     6      3
                             ___wmul
                        _adc_amostra
                          _display7s
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 3     0      3    1610
                                              4 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     601
                                              7 COMMON     3     3      0
                                              0 BANK0      4     0      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _display7s                                            3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                         10     8      2      31
                                              2 COMMON     3     1      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IRQ_RB0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IRQ_RB0_init
   ___wmul
     _adc_amostra (ARG)
   _adc_amostra
   _adc_init
   _display7s
   _init_temperature
     ___wmul
       _adc_amostra (ARG)
     _adc_amostra
     _display7s
     _itoa
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   _itoa
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 08 10:26:10 2020

                       l70 003C                         l74 00E4                         l66 0188  
                       l85 035E                         l98 0358        ___wmul@multiplicand 0029  
     __size_of_adc_amostra 0048                        l103 0266                        l113 0245  
                      l106 0267                        l109 028D                        l142 01E9  
                      l245 031C                        l247 0334                        l517 02D3  
                      l527 030D                        _GIE 005F                        _RA4 002C  
                      _RA5 002D                        _RB5 0035                        _RB7 0037  
                      _RC5 003D                        u400 0309                        u401 0308  
                      u350 02DA                        u351 02D9                        u600 02CF  
                      u601 02CE                        u610 026B                        u370 02EC  
                      u611 026A                        u371 02EB                        u540 0298  
                      u380 02F6                        u700 010B                        _ISR 0335  
                      u541 0297                        u381 02F5                        u365 02DE  
                      u701 010A                        u630 0240                        u710 0188  
                      u631 023F                        u711 0187                        u640 0316  
                      u560 02AA                        u641 0315                        u625 0272  
                      u561 02A9                        u385 02F2                        u555 029C  
                      u395 02FD                        u580 02BB                        u581 02BA  
                      u670 0330                        u671 032F                        u655 031D  
                      u575 02AB                        u727 015F                        u680 00D0  
                      u665 0324                        u585 02B7                        u681 00CF  
                      u737 017B                        u690 00DD                        u595 02C3  
                      u691 00DC                        u747 0089                        u757 00A9  
                      u695 00D9                        fsr0 0004                        _tmp 0038  
                      _str 003E                        indf 0000                       ?_ISR 0070  
                     l1211 0195                       l1203 0191                       l1231 019F  
                     l1223 019B                       l1215 0197                       l1207 0193  
                     l1151 02E4                       l1161 0303                       l1153 02E8  
                     l1145 02D4                       l1251 01A9                       l1243 01A5  
                     l1235 01A1                       l1227 019D                       l1219 0199  
                     l1155 02EC                       l1147 02DA                       l1163 0309  
                     l1157 02F6                       l1149 02DD                       l1501 0072  
                     l1255 01AB                       l1247 01A7                       l1239 01A3  
                     l1431 029B                       l1159 02FC                       l1511 0092  
                     l1503 007A                       l1265 01AF                       l1193 018C  
                     l1441 02C1                       l1433 02A2                       l1425 028E  
                     l1521 00D0                       l1513 009A                       l1505 0083  
                     l1451 0247                       l1259 01AD                       l1195 018D  
                     l1443 02C2                       l1435 02A6                       l1427 0290  
                     l1523 00DD                       l1515 00A3                       l1507 008E  
                     l1531 00EA                       l1285 0359                       l1453 0248  
                     l1461 0251                       l1445 02C9                       l1437 02AA  
                     l1429 0298                       l1525 00E3                       l1517 00AE  
                     l1509 0091                       l1541 00F6                       l1533 00EE  
                     l1287 0350                       l1463 026B                       l1455 024B  
                     l1199 018F                       l1439 02BB                       l1447 02CF  
                     l1471 01EA                       l1519 00CA                       l1551 0119  
                     l1543 00F9                       l1535 00EF                       l1481 0316  
                     l1457 024E                       l1617 01B7                       l1473 0238  
                     l1561 0150                       l1553 013B                       l1545 00FC  
                     l1537 00F2                       l1529 00E5                       l1483 0323  
                     l1619 025B                       l1475 0240                       l1491 0037  
                     l1571 016C                       l1563 0159                       l1555 0148  
                     l1547 0105                       l1539 00F5                       l1485 032A  
                     l1477 030E                       l1493 003F                       l1573 0175  
                     l1565 0164                       l1557 014B                       l1549 010B  
                     l1487 0330                       l1479 0310                       l1495 0061  
                     l1567 0167                       l1559 014C                       l1575 0180  
                     l1497 006E                       l1569 0168                       l1499 0071  
                     _INTE 005C                       _INTF 0059                       i1l82 0349  
                     _flag 003A                       _main 00E5                       _itoa 01EA  
                     btemp 007E                       start 000C                      ??_ISR 0070  
                    ?_main 0070                      ?_itoa 0024            __end_of___lwdiv 02D4  
          __end_of___lwmod 030E                      _PORTD 0008                      u52_20 0339  
                    u52_21 0338                      u53_20 0342                      u53_21 0341  
                    _TRISA 0085                      _TRISD 0088                      main@x 0037  
                    main@y 0036                      pclath 000A                      status 0003  
                    wtemp0 007E          ?_init_temperature 002B         ??_init_temperature 002E  
          __initialization 000F               __end_of_main 018B               __end_of_itoa 0246  
                   ??_main 0034                     ??_itoa 007A                     _ADCON0 001F  
                   _ADCON1 009F                     _ADRESH 001E                     _ADRESL 009E  
      init_temperature@res 0030        init_temperature@tmp 002B        init_temperature@str 002D  
         __end_of_adc_init 0359                     i1l1381 0342                     i1l1383 0345  
                   i1l1375 0335                     i1l1377 0339                     i1l1379 033A  
                   _INTEDG 040E                     _TRISB5 0435                     _TRISC5 043D  
                   _TRISB7 0437                     ___wmul 030E                  ??___lwdiv 0077  
                ??___lwmod 0076                     _stayIn 007A               __pdataCOMMON 007A  
                   saved_w 007E              ?_IRQ_RB0_init 0070    __end_of__initialization 0033  
           __pcstackCOMMON 0070               __pidataBANK0 0361             ??_IRQ_RB0_init 0072  
       __size_of_display7s 005F                 __pbssBANK0 0038                 __pmaintext 00E5  
                  ?___wmul 0027              ??_adc_amostra 0020                 __pintentry 0004  
                ?_adc_init 0070          __end_of_display7s 01EA            __size_of___wmul 0027  
                  ___lwdiv 028E                    ___lwmod 02D4                 ??_adc_init 0072  
                  __ptext1 0037                    __ptext2 01EA                    __ptext3 02D4  
__size_of_init_temperature 00AE                    __ptext4 028E                    __ptext5 018B  
                  __ptext6 0246                    __ptext7 030E                    __ptext8 0350  
                  __ptext9 0359               __size_of_ISR 001B        __end_of_adc_amostra 028E  
     end_of_initialization 0033                    itoa@val 0024                    itoa@str 0026  
     __end_of_IRQ_RB0_init 035F                 _wantedTemp 0044                  _PORTEbits 0009  
               display7s@v 0074                _adc_amostra 0246             __end_of___wmul 0335  
            __pidataCOMMON 035F        start_initialization 000F                __end_of_ISR 0350  
                 ??___wmul 0075                __pdataBANK0 0044           _init_temperature 0037  
        __size_of_adc_init 0009                  ___latbits 0002              __pcstackBANK0 0020  
    __size_of_IRQ_RB0_init 0006           ___lwdiv@dividend 0022                   ?___lwdiv 0020  
                 ?___lwmod 0072                  _display7s 018B               _IRQ_RB0_init 0359  
         ___lwdiv@quotient 0078          interrupt_function 0004             ___wmul@product 0075  
               ?_display7s 0070                 _ADCON0bits 001F          ___wmul@multiplier 0027  
        init_temperature@x 0033          init_temperature@y 0032               ?_adc_amostra 0072  
         __size_of___lwdiv 0046           __size_of___lwmod 003A                   _adc_init 0350  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0077                   __ptext10 0335  
 __end_of_init_temperature 00E5              __size_of_main 00A6              __size_of_itoa 005C  
                 _tempinit 003C                ??_display7s 0072                   intlevel1 0000  
         ___lwmod@dividend 0074            ___lwmod@divisor 0072            ___lwmod@counter 0076  
         adc_amostra@canal 0074  
